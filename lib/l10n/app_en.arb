{
  "@@locale": "en",
  "hawir": "Hawir",
  "@hawir": {
    "description": "Name of the app."
  },
  "editProfile": "Edit Profile",
  "@editProfile": {
    "description": "Label for the action to edit the user's profile."
  },
  "bookATrip": "Book a Trip",
  "@bookATrip": {
    "description": "Label for the action to book a new trip."
  },
  "selectDeparture": "Select Departure",
  "@selectDeparture": {
    "description": "Label for the field or action to select the trip's departure location."
  },
  "selectDestination": "Select Destination",
  "@selectDestination": {
    "description": "Label for the field or action to select the trip's destination."
  },
  "departure": "Departure",
  "@departure": {
    "description": "Label for the trip's departure location."
  },
  "returnDate": "Destination",
  "@returnDate": {
    "description": "Label for the trip's destination location (or return location)."
  },
  "passengers": "Passengers",
  "@passengers": {
    "description": "Label for the field to specify the number of passengers."
  },
  "searchTravel": "Search Travel",
  "@searchTravel": {
    "description": "Label for the action to search for available trips."
  },
  "settings": "Settings",
  "@settings": {
    "description": "Label for the screen or action to access app settings."
  },
  "logOut": "Log Out",
  "@logOut": {
    "description": "Label for the action to log the user out of the app."
  },
  "home": "Home",
  "@home": {
    "description": "Label for the main screen of the app."
  },
  "bookings": "Bookings",
  "@bookings": {
    "description": "Label for the screen or section showing the user's trip bookings."
  },
  "checkIn": "Check In",
  "@checkIn": {
    "description": "Label for the action to check in for a trip."
  },
  "profile": "Profile",
  "@profile": {
    "description": "Label for the screen showing the user's profile information."
  },
  "email": "Email",
  "@email": {
    "description": "Label for the email address field."
  },
  "password": "Password",
  "@password": {
    "description": "Label for the password field."
  },
  "forgotPassword": "Forgot Password?",
  "@forgotPassword": {
    "description": "Label for the action to recover a forgotten password."
  },
  "rememberMe": "Remember Me",
  "@rememberMe": {
    "description": "Label for the option to remember the user's login credentials."
  },
  "signIn": "Sign In",
  "@signIn": {
    "description": "Label for the action to sign in to the app."
  },
  "signUpWithGoogle": "Sign Up with Google",
  "@signUpWithGoogle": {
    "description": "Label for the action to sign up using a Google account."
  },
  "dontHaveAnAccount": "Don't have an account?",
  "@dontHaveAnAccount": {
    "description": "Label for the prompt asking if the user doesn't have an account."
  },
  "signUp": "Sign Up",
  "@signUp": {
    "description": "Label for the action to sign up for a new account."
  },
  "createAccount": "Create an Account",
  "@createAccount": {
    "description": "Label for the heading of the account creation page."
  },
  "firstName": "First Name",
  "@firstName": {
    "description": "Label for the user's first name field."
  },
  "lastName": "Last Name",
  "@lastName": {
    "description": "Label for the user's last name field."
  },
  "loginPreference": "Login Preference",
  "@loginPreference": {
    "description": "Label for the option to choose login method (email or phone)."
  },
  "phoneNumber": "Phone Number",
  "@phoneNumber": {
    "description": "Label for the user's phone number field."
  },
  "confirmPassword": "Confirm Password",
  "@confirmPassword": {
    "description": "Label for the field to confirm the user's password."
  },
  "thisFieldRequired": "This field is required",
  "@thisFieldRequired": {
    "description": "Error message when a required field is empty."
  },
  "validEmail": "Enter a valid email address",
  "@validEmail": {
    "description": "Error message for an invalid email format."
  },
  "validPhone": "Enter a valid phone number",
  "@validPhone": {
    "description": "Error message for an invalid phone number format."
  },
  "validFirstName": "First Name must contain only alphabets and be between 1 and 50 characters",
  "@validFirstName": {
    "description": "Error message for an invalid first name."
  },
  "validLastName": "Last Name must contain only alphabets and be between 1 and 50 characters",
  "@validLastName": {
    "description": "Error message for an invalid last name."
  },
  "securePassword": "Password must be at least 8 characters long, include uppercase, lowercase, number, and special character",
  "@securePassword": {
    "description": "Error message for a weak password."
  },
  "emailOption": "Email",
  "@emailOption": {
    "description": "Label for the email login option."
  },
  "phoneOption": "Phone",
  "@phoneOption": {
    "description": "Label for the phone number login option."
  },
  "alreadyHaveAccount": "Already have an account?",
  "@alreadyHaveAccount": {
    "description": "Prompt asking if the user already has an account."
  },
  "verificationEmailSent": "Verification Email Sent",
  "@verificationEmailSent": {
    "description": "Title of the dialog shown after successful sign-up."
  },
  "verificationEmailContent": "A verification email has been sent to your account. Please check your inbox (and spam folder) to verify your email address.",
  "@verificationEmailContent": {
    "description": "Content of the verification email sent dialog."
  },
  "ok": "OK",
  "@ok": {
    "description": "Label for the OK button in dialogs."
  },
  "passwordsDoNotMatch": "Passwords do not match",
  "@passwordsDoNotMatch": {
    "description": "Error message when the entered passwords do not match."
  },
  "signUpFailed": "Sign up failed",
  "@signUpFailed": {
    "description": "Error message when the sign-up process fails."
  },
  "incorrectEmailOrPassword": "Incorrect email or password.",
  "@incorrectEmailOrPassword": {
    "description": "Error message when the email or password entered is incorrect."
  },
  "unexpectedError": "An unexpected error occurred.",
  "@unexpectedError": {
    "description": "Error message for a general, unexpected error."
  },
  "networkError": "Network error occurred.",
  "@networkError": {
    "description": "Error message when a network-related error occurs."
  },
  "pleaseEnterEmail": "Please enter your email",
  "@pleaseEnterEmail": {
    "description": "Error message when the email field is empty."
  },
  "pleaseEnterPassword": "Please enter your password",
  "@pleaseEnterPassword": {
    "description": "Error message when the password field is empty."
  },
  "signUpError": "Sign up error: {error}",
  "@signUpError": {
    "description": "Error message for a general sign-up error, with a placeholder for the error details.",
    "placeholders": {
      "error": {
        "type": "String",
        "example": "Network error",
        "description": "The specific error message."
      }
    }
  },
  "welcome": "Welcome {username}!",
  "@welcome": {
    "description": "Welcome message for the user, with a placeholder for the username.",
    "placeholders": {
      "username": {
        "type": "String",
        "example": "John",
        "description": "The user's name."
      }
    }
  },
  "pleaseSelectLocation": "Please select a location.",
  "@pleaseSelectLocation": {
    "description": "Error message when no location is selected."
  },
  "departureAfterReturn": "Departure date cannot be after return date.",
  "@departureAfterReturn": {
    "description": "Error message when the departure date is after the return date."
  },
  "availableTrips": "Available Trips",
  "@availableTrips": {
    "description": "Title of the page showing available trips."
  },
  "filterTrips": "Filter Trips",
  "@filterTrips": {
    "description": "Title of the filter dialog."
  },
  "priceRange": "Price Range: {minprice} - {maxprice}",
  "@priceRange": {
    "description": "Label for the price range filter.",
    "placeholders": {
      "minprice": {
        "type": "int",
        "example": "0",
        "description": "Minimum price."
      },
      "maxprice": {
        "type": "int",
        "example": "1000",
        "description": "Maximum price."
      }
    }
  },
  "apply": "Apply",
  "@apply": {
    "description": "Label for the apply button in the filter dialog."
  },
  "agency": "Agency: {agencyName}",
  "@agency": {
    "description": "Label for the agency name.",
    "placeholders": {
      "agencyName": {
        "type": "String",
        "example": "Example Agency",
        "description": "The name of the agency."
      }
    }
  },
  "price": "Price: {price}",
  "@price": {
    "description": "Label for the price of the trip.",
    "placeholders": {
      "price": {
        "type": "double",
        "example": "150.00",
        "description": "The price of the trip."
      }
    }
  },
  "loading": "Loading...",
  "@loading": {
    "description": "Text shown when data is loading."
  },
  "unknownAgency": "Unknown Agency",
  "@unknownAgency": {
    "description": "Text shown when agency name is unknown."
  },
  "errorLoadingAgency": "Error Loading Agency",
  "@errorLoadingAgency": {
    "description": "Text shown when agency name loading fails."
  },
  "travelDetails": "Travel Details",
  "@travelDetails": {
    "description": "Title of the travel details page."
  },
  "startLocation": "Start Location",
  "@startLocation": {
    "description": "Label for the start location of the travel."
  },
  "destination": "Destination",
  "@destination": {
    "description": "Label for the destination of the travel."
  },
  "priceDisplay": "Price",
  "@priceDisplay": {
    "description": "Label for the price of the travel."
  },
  "arrival": "Arrival",
  "@arrival": {
    "description": "Label for the arrival time of the travel."
  },
  "driver": "Driver",
  "@driver": {
    "description": "Label for the driver name of the travel."
  },
  "bookNow": "Book Now",
  "@bookNow": {
    "description": "Label for the button to book the travel."
  },
  "agencyNotFound": "Agency Not Found",
  "@agencyNotFound": {
    "description": "Message when agency is not found."
  },
  "failedToBookTravel": "Failed to book travel: {error}",
  "@failedToBookTravel": {
    "description": "Message when booking travel fails.",
    "placeholders": {
      "error": {
        "type": "String",
        "example": "Network error",
        "description": "The error message."
      }
    }
  },
  "notAvailable": "Not Available",
  "@notAvailable": {
    "description": "Message when arrival time or driver is not available."
  },
  "notAssigned": "Not Assigned",
  "@notAssigned": {
    "description": "Message when driver is not assigned."
  },
  "seatChosen": "Seat {seatNumber} chosen.",
  "@seatChosen": {
    "description": "Message when a seat is successfully chosen.",
    "placeholders": {
      "seatNumber": {
        "type": "int",
        "example": "20",
        "description": "The number of the seat that was chosen."
      }
    }
  },
  "bookingTravel": "Booking travel...",
  "@bookingTravel": {
    "description": "Message indicating travel booking is in progress."
  },
  "changePassword": "Change Password",
  "@changePassword": {
    "description": "Button to toggle password change fields."
  },
  "hidePasswordChange": "Hide Password Change",
  "@hidePasswordChange": {
    "description": "Button to hide password change fields."
  },
  "oldPassword": "Old Password",
  "@oldPassword": {
    "description": "Label for the old password input field."
  },
  "newPassword": "New Password",
  "@newPassword": {
    "description": "Label for the new password input field."
  },
  "confirmNewPassword": "Confirm New Password",
  "@confirmNewPassword": {
    "description": "Label for the confirm new password input field."
  },
  "saveChanges": "Save Changes",
  "@saveChanges": {
    "description": "Button to save profile changes."
  },
  "profileUpdatedSuccess": "Profile updated successfully.",
  "@profileUpdatedSuccess": {
    "description": "Message when profile is updated successfully."
  },
  "profileUpdatedRefetchFailed": "Profile updated successfully, but failed to refetch data.",
  "@profileUpdatedRefetchFailed": {
    "description": "Message when profile is updated but refetching data fails."
  },
  "theme": "Theme",
  "@theme": {
    "description": "Label for the theme setting."
  },
  "changeAppTheme": "Change app theme",
  "@changeAppTheme": {
    "description": "Subtitle for the theme setting."
  },
  "language": "Language",
  "@language": {
    "description": "Label for the language setting."
  },
  "currentLanguage": "Current Language: {languageName}",
  "@currentLanguage": {
    "description": "Subtitle for the language setting, showing the current language.",
    "placeholders": {
      "languageName": {
        "type": "String",
        "example": "English",
        "description": "The name of the current language."
      }
    }
  },
  "english": "English",
  "@english": {
    "description": "Label for the English language option."
  },
  "amharic": "Amharic",
  "@amharic": {
    "description": "Label for the Amharic language option."
  },
  "notifications": "Notifications",
  "@notifications": {
    "description": "Label for the notifications setting."
  },
  "markAllAsRead": "Mark all as read",
  "@markAllAsRead": {
    "description": "Label for the action to mark all notifications as read."
  },
  "noNewNotifications": "No new notifications",
  "@noNewNotifications": {
    "description": "Message when there are no new notifications."
  },
  "pleaseSelectSeat": "Please select a seat.",
  "@pleaseSelectSeat": {
    "description": "Error message shown when the user tries to book without selecting a seat."
  },
  "loginRequiredForBooking": "Login is required for booking.",
  "@loginRequiredForBooking": {
    "description": "Error message shown when an anonymous user tries to book a seat."
  },
  "selectYourSeat": "Select your seat",
  "@selectYourSeat": {
    "description": "Heading or label for the seat selection section."
  },
  "bookingDetails": "Booking Details",
  "@bookingDetails": {
    "description": "Title of the booking details page."
  },
  "bookingSummary": "Booking Summary",
  "@bookingSummary": {
    "description": "Section title for the booking details summary."
  },
  "travelId": "Travel ID",
  "@travelId": {
    "description": "Label for the travel ID."
  },
  "travelerId": "Traveler ID",
  "@travelerId": {
    "description": "Label for the traveler ID."
  },
  "seatNo": "Seat No",
  "@seatNo": {
    "description": "Label for the seat number."
  },
  "tripType": "Trip Type",
  "@tripType": {
    "description": "Label for the trip type."
  },
  "paymentType": "Payment Type",
  "@paymentType": {
    "description": "Label for the payment type."
  },
  "paymentRef": "Payment Ref",
  "@paymentRef": {
    "description": "Label for the payment reference."
  },
  "bookTime": "Book Time",
  "@bookTime": {
    "description": "Label for the booking time."
  },
  "payTime": "Pay Time",
  "@payTime": {
    "description": "Label for the payment time."
  },
  "notPaidYet": "Not Paid Yet",
  "@notPaidYet": {
    "description": "Text shown when a booking has not been paid yet."
  },
  "bookTimeLimit": "Book Time Limit",
  "@bookTimeLimit": {
    "description": "Label for the booking time limit."
  },
  "status": "Status",
  "@status": {
    "description": "Label for the booking status."
  },
  "proceedToPayment": "Proceed to Payment",
  "@proceedToPayment": {
    "description": "Label for the button to proceed to the payment page."
  },
  "unknownStatus": "Unknown Status",
  "@unknownStatus": {
    "description": "Text shown when the booking status is unknown or missing."
  },
  "bookingConfirmationTitle": "Booking Confirmation",
  "@bookingConfirmationTitle": {
    "description": "Title of the booking confirmation page."
  },
  "bookingConfirmedMessage": "Booking Confirmed!",
  "@bookingConfirmedMessage": {
    "description": "Message shown to the user after a booking is confirmed."
  },
  "paymentDue": "Payment Due",
  "@paymentDue": {
    "description": "Label for the payment due time."
  },
  "paymentAmount": "Payment Amount",
  "@paymentAmount": {
    "description": "Label for the amount to be paid."
  },
  "currencyETB": "ETB",
  "@currencyETB": {
    "description": "Currency code for Ethiopian Birr."
  },
  "initiatingPayment": "Initiating payment...",
  "@initiatingPayment": {
    "description": "Message shown while the payment process is being initiated."
  },
  "paymentTitle": "Trip Payment",
  "@paymentTitle": {
    "description": "Title for the payment transaction."
  },
  "paymentDescription": "Payment for Travel ID: {travelId}",
  "@paymentDescription": {
    "description": "Description for the payment transaction, with travel ID.",
    "placeholders": {
      "travelId": {
        "type": "String",
        "example": "XYZ123",
        "description": "The ID of the travel being paid for."
      }
    }
  },
  "paymentSuccessful": "Payment successful!",
  "@paymentSuccessful": {
    "description": "Message shown after a successful payment."
  },
  "paymentFailed": "Payment failed: {message}",
  "@paymentFailed": {
    "description": "Message shown after a failed payment, with failure details.",
    "placeholders": {
      "message": {
        "type": "String",
        "example": "Insufficient funds",
        "description": "The payment failure message."
      }
    }
  },
  "paymentError": "Payment error: {error}",
  "@paymentError": {
    "description": "Generic message shown if an error occurs during payment initiation or processing, with error details.",
    "placeholders": {
      "error": {
        "type": "String",
        "example": "Network connectivity issue",
        "description": "The error message details."
      }
    }
  },
  "loginRequiredForPayment": "Login is required for payment.",
  "@loginRequiredForPayment": {
    "description": "Message shown if payment is attempted by a user who is not logged in."
  },
  "payButtonLabel": "Pay Now",
  "@payButtonLabel": {
    "description": "Label for the button that initiates payment."
  },
  "backToBookings": "Back to Bookings",
  "@backToBookings": {
    "description": "Label for the button to navigate back to the bookings list."
  },
  "paymentSuccessTitle": "Payment Successful",
  "@paymentSuccessTitle": {
    "description": "Title of the payment success page."
  },
  "paymentSuccessfulMessage": "Your payment has been processed successfully!",
  "@paymentSuccessfulMessage": {
    "description": "Message shown to the user after a successful payment transaction."
  },
  "goToHome": "Go to Home",
  "@goToHome": {
    "description": "Label for the button to navigate to the home screen after successful payment."
  },
  "pleaseEnterPhoneNumber": "Please enter your phone number.",
  "@pleaseEnterPhoneNumber": {
    "description": "Error message shown when the phone number field is empty during profile update."
  },
  "savingChanges": "Saving changes...",
  "@savingChanges": {
    "description": "Loading message shown while profile changes are being saved."
  },
  "loginRequiredForSavingProfile": "Login required to save profile changes.",
  "@loginRequiredForSavingProfile": {
    "description": "Error message shown when a user tries to save profile changes without being logged in."
  },
  "profileUpdatedSuccessfully": "Profile updated successfully!",
  "@profileUpdatedSuccessfully": {
    "description": "Success message shown after a user's profile information is successfully updated."
  },
  "failedToUpdateProfile": "Failed to update profile: {errorMessage}",
  "@failedToUpdateProfile": {
    "description": "Error message shown when updating the profile fails, including the specific error from the backend.",
    "placeholders": {
      "errorMessage": {
        "type": "String",
        "description": "The specific error message received from the backend API."
      }
    }
  },
  "pleaseFillAllPasswordFields": "Please fill in all password fields.",
  "@pleaseFillAllPasswordFields": {
    "description": "Error message shown when one or more password fields are empty during password change."
  },
  "changingPassword": "Changing password...",
  "@changingPassword": {
    "description": "Loading message shown while the password is being changed."
  },
  "loginRequiredForPasswordChange": "Login required to change password.",
  "@loginRequiredForPasswordChange": {
    "description": "Error message shown when a user tries to change their password without being logged in."
  },
  "passwordChangedSuccessfully": "Password changed successfully!",
  "@passwordChangedSuccessfully": {
    "description": "Success message shown after a user's password is successfully changed."
  },
  "failedToChangePassword": "Failed to change password: {errorMessage}",
  "@failedToChangePassword": {
    "description": "Error message shown when changing the password fails, including the specific error from the backend.",
    "placeholders": {
      "errorMessage": {
        "type": "String",
        "description": "The specific error message received from the backend API."
      }
    }
  },
  "bookingReference": "Booking Reference",
  "@bookingReference": {
    "description": "Label for the booking reference number."
  },
  "loginRequiredForBookingDetails": "Login required to view booking details.",
  "@loginRequiredForBookingDetails": {
    "description": "Message shown when a user needs to be logged in to see booking details."
  },
  "paymentStatusTitle": "Payment Status",
  "@paymentStatusTitle": {
    "description": "Title for the page displaying the payment status."
  },
  "retry": "Retry",
  "@retry": {
    "description": "Label for a button to retry an action, like fetching data."
  },
  "backToHome": "Back to Home",
  "@backToHome": {
    "description": "Label for a button to navigate back to the main screen."
  },
  "myBookingsTitle": "My Bookings",
  "@myBookingsTitle": {
    "description": "App bar title for the bookings list page."
  },
  "noBookingsFound": "No bookings found.",
  "@noBookingsFound": {
    "description": "Message displayed when the user has no bookings."
  },
  "bookedOn": "Booked on",
  "@bookedOn": {
    "description": "Label indicating the date and time a booking was made."
  },
  "from": "From",
  "@from": {
    "description": "Label indicating the starting location of a travel."
  },
  "gallery": "Gallery",
  "@gallery": {
    "description": "Option to select an image from the device gallery."
  },
  "camera": "Camera",
  "@camera": {
    "description": "Option to take a new photo using the device camera."
  },
  "imageSelected": "Image selected successfully.",
  "@imageSelected": {
    "description": "Confirmation message shown after a user selects an image."
  },
  "failedToPickImage": "Failed to pick image: {errorMessage}",
  "@failedToPickImage": {
    "description": "Error message shown when image picking fails.",
    "placeholders": {
      "errorMessage": {
        "type": "String",
        "example": "Permission denied"
      }
    }
  },
  "failedToUploadImage": "Failed to upload image.",
  "@failedToUploadImage": {
    "description": "Generic error message shown when image upload fails."
  },
  "failedToUploadImageParam": "Failed to upload image: {errorMessage}",
  "@failedToUploadImageParam": {
    "description": "Error message shown when image upload fails, including a specific error.",
    "placeholders": {
      "errorMessage": {
        "type": "String",
        "example": "Network error"
      }
    }
  },
  "destinationsTitle": "Destinations",
  "@destinationsTitle": {
    "description": "Title for the destinations list page."
  },
  "failedToLoadDestinations": "Failed to load destinations: {error}",
  "@failedToLoadDestinations": {
    "description": "Error message displayed when the list of destinations fails to load.",
    "placeholders": {
      "error": {
        "type": "String",
        "example": "Network connection failed."
      }
    }
  },
  "noDestinationsFound": "No destinations found.",
  "@noDestinationsFound": {
    "description": "Message displayed when the list of destinations is empty."
  },
  "failedToLoadDestinationDetails": "Failed to load destination details: {error}",
  "@failedToLoadDestinationDetails": {
    "description": "Error message displayed when destination details fail to load.",
    "placeholders": {
      "error": {
        "type": "String",
        "example": "Server responded with 404."
      }
    }
  },
  "noDescriptionAvailable": "No description available.",
  "@noDescriptionAvailable": {
    "description": "Message displayed when a description field is empty."
  },
  "cultureTitle": "Culture",
  "@cultureTitle": {
    "description": "Title for the culture section in destination details."
  },
  "historyTitle": "History",
  "@historyTitle": {
    "description": "Title for the history section in destination details."
  },
  "hotelsTitle": "Hotels",
  "@hotelsTitle": {
    "description": "Title for the hotels section in destination details."
  },
  "unknownHotel": "Unknown Hotel",
  "@unknownHotel": {
    "description": "Placeholder text for a hotel name if the name is missing."
  },
  "attractionsTitle": "Tourist Attractions",
  "@attractionsTitle": {
    "description": "Title for the tourist attractions section in destination details."
  },
  "unknownAttraction": "Unknown Attraction",
  "@unknownAttraction": {
    "description": "Placeholder text for a tourist attraction name if the name is missing."
  },
  "destinationDetailsNotFound": "Destination details not found.",
  "@destinationDetailsNotFound": {
    "description": "Message displayed when details for a specific destination ID are not found."
  },
  "sendCodeButton": "Send Code",
  "@sendCodeButton": {
    "description": "Text for the button to send the password reset code."
  },
  "cancelButton": "Cancel",
  "@cancelButton": {
    "description": "Text for the cancel button in a dialog."
  },
  "forgotPasswordEmailPrompt": "Please enter your email address to receive a password reset code.",
  "@forgotPasswordEmailPrompt": {
    "description": "Prompt text asking the user for their email to reset password."
  },
  "forgotPasswordTitle": "Forgot Password",
  "@forgotPasswordTitle": {
    "description": "Title for the forgot password dialog or page."
  },
  "resettingPassword": "Resetting password...",
  "@resettingPassword": {
    "description": "Loading message while resetting password."
  },
  "passwordResetSuccess": "Password reset successfully. You can now sign in with your new password.",
  "@passwordResetSuccess": {
    "description": "Success message after resetting password."
  },
  "passwordResetFailed": "Password reset failed. Please check the code and try again.",
  "@passwordResetFailed": {
    "description": "Generic error message for password reset failure."
  },
  "passwordResetError": "Error resetting password: %s",
  "@passwordResetError": {
    "description": "Error message for unexpected errors during password reset API call.",
    "placeholders": {
      "s": {
        "type": "String",
        "example": "Network error."
      }
    }
  },
  "resetPasswordTitle": "Reset Password",
  "@resetPasswordTitle": {
    "description": "Title for the reset password page."
  },
  "resetPasswordPrompt": "Enter the code sent to {email} and your new password.",
  "@resetPasswordPrompt": {
    "description": "Prompt text on the reset password page.",
    "placeholders": {
      "email": {
        "type": "String",
        "example": "user@example.com"
      }
    }
  },
  "codeLabel": "Code",
  "@codeLabel": {
    "description": "Label for the password reset code input field."
  },
  "pleaseEnterCode": "Please enter the code.",
  "@pleaseEnterCode": {
    "description": "Validation message for empty code field."
  },
  "invalidCodeLength": "Code must be 12 digits.",
  "@invalidCodeLength": {
    "description": "Validation message for incorrect code length."
  },
  "newPasswordLabel": "New Password",
  "@newPasswordLabel": {
    "description": "Label for the new password input field."
  },
  "pleaseEnterNewPassword": "Please enter a new password.",
  "@pleaseEnterNewPassword": {
    "description": "Validation message for empty new password field."
  },
  "confirmPasswordLabel": "Confirm New Password",
  "@confirmPasswordLabel": {
    "description": "Label for the confirm new password input field."
  },
  "pleaseConfirmPassword": "Please confirm your new password.",
  "@pleaseConfirmPassword": {
    "description": "Validation message for empty confirm password field."
  },
  "resetPasswordButton": "Reset Password",
  "@resetPasswordButton": {
    "description": "Text for the button to reset the password."
  },
  "invalidPassword": "Invalid password.",
  "@invalidPassword": {
    "description": "Validation message for an invalid password."
  },
  "forgotPasswordRequestError": "Error requesting reset code: {error}",
  "@forgotPasswordRequestError": {
    "description": "Error message for unexpected errors during reset code request API call.",
    "placeholders": {
      "error": {
        "type": "String",
        "example": "Server error."
      }
    }
  },
  "forgotPasswordRequestFailed": "Failed to request reset code. Please check your email and try again.",
  "@forgotPasswordRequestFailed": {
    "description": "Error message when requesting password reset code fails."
  },
  "forgotPasswordEmailSent": "A password reset code has been sent to {email}.",
  "@forgotPasswordEmailSent": {
    "description": "Confirmation message after sending the reset code.",
    "placeholders": {
      "email": {
        "type": "String",
        "example": "user@example.com"
      }
    }
  },
  "requestingResetCode": "Requesting reset code...",
  "@requestingResetCode": {
    "description": "Loading message while requesting password reset code."
  },
  "noTravelsFound": "No travels found matching your criteria.",
  "@noTravelsFound": {
    "description": "Message displayed when no travels match the current filters."
  },
  "departureTime": "Departure: {time}",
  "@departureTime": {
    "description": "Label for displaying departure time.",
    "placeholders": {
      "time": {
        "type": "String",
        "example": "2025-05-22 18:13"
      }
    }
  },
  "filterByAgency": "Filter by Agency",
  "@filterByAgency": {
    "description": "Label for the agency filter section."
  },
  "allAgencies": "All Agencies",
  "@allAgencies": {
    "description": "Option to select all agencies in the filter."
  },
  "resetFilters": "Reset Filters",
  "@resetFilters": {
    "description": "Button to reset all applied filters."
  },
  "pickupLocations": "Pickup Locations",
  "@pickupLocations": {},
  "busReference": "Bus Reference",
  "@busReference": {},
  "travelIdDisplay": "Travel ID: {travelId}",
  "@travelIdDisplay": {
    "placeholders": {
      "travelId": {}
    }
  },
  "loginRequiredForBookingsPage": "Please log in to view your bookings.",
  "@loginRequiredForBookingsPage": {},
  "failedToLoadBookings": "Failed to load bookings: {error}",
  "@failedToLoadBookings": {
    "placeholders": {
      "error": {}
    }
  },
  "startBookingMessage": "It looks like you haven't booked any travels yet. Let's find your next adventure!",
  "@startBookingMessage": {},
  "findNewTravels": "Find New Travels",
  "@findNewTravels": {},
  "bookingStatusPending": "Pending",
  "@bookingStatusPending": {},
  "bookingStatusConfirmed": "Confirmed",
  "@bookingStatusConfirmed": {},
  "bookingStatusCancelled": "Cancelled",
  "@bookingStatusCancelled": {},
  "bookingStatusFailed": "Failed",
  "@bookingStatusFailed": {},
  "sameLocationError": "Departure and destination locations cannot be the same.",
  "@sameLocationError": {},
  "noTravelsFoundSearch": "No travels found for your search.",
  "@noTravelsFoundSearch": {},
  "adjustSearchCriteria": "Try adjusting your locations or dates.",
  "@adjustSearchCriteria": {},
  "clearSearch": "Clear Search",
  "@clearSearch": {},
  "searchError": "Search failed: {errorMessage}",
  "@searchError": {
    "placeholders": {
      "errorMessage": {}
    }
  },
  "refreshBookings": "Refresh Bookings",
  "@refreshBookings": {},
  "to": "To",
  "@to": {},
  "travelDetailsSection": "Travel Details",
  "@travelDetailsSection": {},
  "payBy": "Pay By",
  "@payBy": {},
  "paymentDetails": "Payment Details",
  "@paymentDetails": {},
  "timeExpired": "Expired",
  "@timeExpired": {},
  "timeRemainingDays": "{days}d {hours}h {minutes}m {seconds}s",
  "@timeRemainingDays": {
    "placeholders": {
      "days": {},
      "hours": {},
      "minutes": {},
      "seconds": {}
    }
  },
  "timeRemainingHours": "{hours}h {minutes}m {seconds}s",
  "@timeRemainingHours": {
    "placeholders": {
      "hours": {},
      "minutes": {},
      "seconds": {}
    }
  },
  "timeRemainingMinutes": "{minutes}m {seconds}s",
  "@timeRemainingMinutes": {
    "placeholders": {
      "minutes": {},
      "seconds": {}
    }
  },
  "timeRemainingSeconds": "{seconds}s",
  "@timeRemainingSeconds": {
    "placeholders": {
      "seconds": {}
    }
  },
  "notificationsTitle": "Notifications",
  "@notificationsTitle": {},
  "noTravellerIdError": "Traveller ID not available. Please log in to view notifications.",
  "@noTravellerIdError": {},
  "failedToLoadNotifications": "Failed to load notifications: {errorMessage}. Please try again.",
  "@failedToLoadNotifications": {
    "placeholders": {
      "errorMessage": {}
    }
  },
  "noNotificationsYet": "No Notifications Yet!",
  "@noNotificationsYet": {},
  "notificationEmptyMessage": "When you have new updates or alerts, they'll appear here.",
  "@notificationEmptyMessage": {},
  "markAsUnreadButton": "Mark as Unread",
  "@markAsUnreadButton": {},
  "closeButton": "Close",
  "@closeButton": {},
  "postedOn": "Posted On",
  "@postedOn": {},
  "errorLoadingNotifications": "Oops! Something went wrong.",
  "@errorLoadingNotifications": {},
  "tryAgainButton": "Try Again",
  "@tryAgainButton": {},
  "markReadFailed": "Failed to mark as read. Please try again.",
  "@markReadFailed": {},
  "markReadSuccess": "Notification marked as read.",
  "@markReadSuccess": {},
  "markReadLoginRequired": "Login required to mark notification as read.",
  "@markReadLoginRequired": {},
  "markReadError": "Error marking as read: {errorMessage}",
  "@markReadError": {
    "placeholders": {
      "errorMessage": {}
    }
  },
  "markUnreadFailed": "Failed to mark as unread. Please try again.",
  "@markUnreadFailed": {},
  "markUnreadSuccess": "Notification marked as unread.",
  "@markUnreadSuccess": {},
  "markUnreadLoginRequired": "Login required to mark notification as unread.",
  "@markUnreadLoginRequired": {},
  "markUnreadError": "Error marking as unread: {errorMessage}",
  "@markUnreadError": {
    "placeholders": {
      "errorMessage": {}
    }
  },
  "markAsReadButton": "Mark as Read",
  "@markAsReadButton": {},
  "userAlreadyExists": "A user with this email or phone number already exists.",
  "@userAlreadyExists": {
    "description": "Error message when a user tries to sign up with an email or phone number that is already registered.",
    "type": "text",
    "placeholders": {}
  },
  "registrationPendingVerification": "Your registration is awaiting email verification. Please check your inbox.",
  "@registrationPendingVerification": {
    "description": "Informational message when a user has signed up but needs to verify their email address.",
    "type": "text",
    "placeholders": {}
  },
  "signUpFailedGeneric": "Sign up failed. Please try again or contact support.",
  "@signUpFailedGeneric": {
    "description": "Generic error message when sign up fails due to an unhandled or unknown issue.",
    "type": "text",
    "placeholders": {}
  },
  "travelerDetails": "Traveler Details",
  "@travelerDetails": {
    "description": "Heading for the section where user enters their details for booking.",
    "type": "text",
    "placeholders": {}
  },
  "pleaseFillAllFields": "Please fill all required traveler details.",
  "@pleaseFillAllFields": {
    "description": "Error message shown when a form has required fields that are not filled.",
    "type": "text",
    "placeholders": {}
  },
  "fullName": "Full Name",
  "@fullName": {
    "description": "Label for the traveler's full name.",
    "type": "text",
    "placeholders": {}
  },
  "userAlreadyExistsForTravel": "Traveler details match an existing user. Please ensure the details are correct or sign in.",
  "@userAlreadyExistsForTravel": {
    "description": "Error message when booking with traveler details that match an already registered user.",
    "type": "text",
    "placeholders": {}
  },
  "validName": "Please enter a valid name (letters, spaces, and hyphens only).",
  "@validName": {
    "description": "Error message when user enters unsual characters.",
    "type": "text",
    "placeholders": {}
  },
  "events": "Events",
  "@events": {
    "description": "Tab or section title for events.",
    "type": "text",
    "placeholders": {}
  }
}